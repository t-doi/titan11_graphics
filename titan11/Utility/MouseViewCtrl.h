/*****************************************************************************
**
**	File:	  MouseViewCtrl.h
** 
**	説明: 	TITAN XIの型定義ファイル
**
**	Created: 2004/02/14(Sat)	Updated: 2005/01/06(Thu)
**
**	Copyright (C) Tokyo Institute of Technology Hirose & Yoneda Lab.
*****************************************************************************/

#ifndef	__MouseViewCtrl_h__
#define __MouseViewCtrl_h__

#include <math.h>
#include "../Math/MathLibrary.h"

class MouseViewCtrl
{
/*************************
**						**
**		メンバ変数		**
**						**
*************************/
public:
/*******************************************************************
**	マウスによるイベント
**		TRANSLATE			: 並進
**		ROTATE				: 回転
**		SCALE				: 縮尺
**		STOP				: 停止
*******************************************************************/
	enum DragMode{TRANSLATE, ROTATE, SCALE, STOP};

/*******************************************************************
**	視点の情報
**		Azimuth				: 方位角(アジマス)[deg]
**		Elevation			: 仰角(エレベイション)[deg]
**		Distance			: 距離
*******************************************************************/
	double		Azimuth;
	double		Elevation;
	double		Distance;

/*******************************************************************
**	視点の中心位置
*******************************************************************/
	double		ViewCenterPos[3];

private:
/*******************************************************************
**	視点の初期情報
**		InitAzimuth				: 方位角(アジマス)[deg]
**		InitElevation			: 仰角(エレベイション)[deg]
**		InitDistance			: 距離
*******************************************************************/
	double		InitAzimuth;
	double		InitElevation;
	double		InitDistance;

/*******************************************************************
**	視点の初期中心位置
*******************************************************************/
	double		InitViewCenterPos[3];

/*******************************************************************
**	視点の2次元初期位置
*******************************************************************/
	int			InitX, InitY;

/*******************************************************************
**	マウスのドラッグのモード
*******************************************************************/
	DragMode	MouseMode;

protected:

/*************************
**						**
**		メンバ関数		**
**						**
*************************/

public:

/*******************************************************************
**	コンストラクタとデストラクタ
*******************************************************************/
	MouseViewCtrl();
	~MouseViewCtrl();

/*******************************************************************
**	画面上の操作起点となる点をセット
*******************************************************************/
	void	SetCtrlPoint(int x, int y);

/*******************************************************************
**	変数の値をデフォルトにセット
*******************************************************************/
	void	SetDefault(void);

/*******************************************************************
**	マウスのイベントモードを取得
*******************************************************************/
	MouseViewCtrl::DragMode GetDragMode(void){ return (MouseMode); }

/*******************************************************************
**	マウスのイベントをセット
*******************************************************************/
	void	SetDragMode(MouseViewCtrl::DragMode mode);

/*******************************************************************
**	視点の情報を直接設定
*******************************************************************/
	void		SetAzimuth(double azimuth);
	void		SetElevation(double elevation);
	void		SetDistance(double distance);

/*******************************************************************
**	視野の変更の各種操作
**		Translate			: 並進操作
**		Rotate				: 回転操作
**		Scale				: 縮尺操作
*******************************************************************/
	void	Translate(int x, int y);
	void	Rotate(int x, int y);
	void	Scale(int x, int y);

/*******************************************************************
**	マウスのドラッグモードによりViewの変更
*******************************************************************/
	void	TransformView(int x, int y);

private:

/*******************************************************************
**	視点を極座標から直交座標に変換する
*******************************************************************/

/*******************************************************************
**	視線方向の取得
*******************************************************************/
	void		GetViewing(double* x, double* y, double* z);

/*******************************************************************
**	視野の上方向の取得
*******************************************************************/
	void		GetUpViewing(double* x, double* y, double* z);

protected:

};

#endif // __MouseViewCtrl_h__